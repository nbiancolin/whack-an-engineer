module prng(clock, press_generate, counter, output_data);
	// pseudo-rng relying on fast clocks
	input clock, press_generate;
	input [3:0] counter;
	output wire [3:0] output_data;
	
	wire [3:0] input_data;
	
	ratedivider rd(clock, input_data);
	bram br(counter, clock, input_data, wren, output_data);
	
endmodule

module ratedivider(clock, enable, rand);
	input clock;
	output reg [3:0] rand;
	
	parameter uppermax = $clog2(50000000);
	reg [uppermax + 2:0] downCount;
	
	always@(posedge clock) begin
		if (enable) begin
			rand <= clock % 6;
		else
			rand <= 'b0;
	end

endmodule