|whack_an_engineer
CLOCK_50 => CLOCK_50.IN2
KEY[0] => reset.IN2
KEY[1] => start.IN1
KEY[2] => ~NO_FANOUT~
KEY[3] => ~NO_FANOUT~
SW[0] => ~NO_FANOUT~
SW[1] => ~NO_FANOUT~
SW[2] => ~NO_FANOUT~
SW[3] => ~NO_FANOUT~
SW[4] => ~NO_FANOUT~
SW[5] => ~NO_FANOUT~
SW[6] => ~NO_FANOUT~
SW[7] => ~NO_FANOUT~
SW[8] => ~NO_FANOUT~
SW[9] => ~NO_FANOUT~
LEDR[0] << mainDataPath:dp.molesGenerated
LEDR[1] << mainDataPath:dp.molesGenerated
LEDR[2] << mainDataPath:dp.molesGenerated
LEDR[3] << mainDataPath:dp.molesGenerated
LEDR[4] << mainDataPath:dp.molesGenerated
LEDR[5] << <GND>
LEDR[6] << <GND>
LEDR[7] << <GND>
LEDR[8] << <GND>
LEDR[9] << keyboard_decoder:kb.port5
HEX5[0] << hex_decoder:h5.port1
HEX5[1] << hex_decoder:h5.port1
HEX5[2] << hex_decoder:h5.port1
HEX5[3] << hex_decoder:h5.port1
HEX5[4] << hex_decoder:h5.port1
HEX5[5] << hex_decoder:h5.port1
HEX5[6] << hex_decoder:h5.port1
HEX3[0] << hex_decoder:h3.port1
HEX3[1] << hex_decoder:h3.port1
HEX3[2] << hex_decoder:h3.port1
HEX3[3] << hex_decoder:h3.port1
HEX3[4] << hex_decoder:h3.port1
HEX3[5] << hex_decoder:h3.port1
HEX3[6] << hex_decoder:h3.port1
HEX2[0] << hex_decoder:h2.port1
HEX2[1] << hex_decoder:h2.port1
HEX2[2] << hex_decoder:h2.port1
HEX2[3] << hex_decoder:h2.port1
HEX2[4] << hex_decoder:h2.port1
HEX2[5] << hex_decoder:h2.port1
HEX2[6] << hex_decoder:h2.port1
HEX1[0] << hex_decoder:h1.port1
HEX1[1] << hex_decoder:h1.port1
HEX1[2] << hex_decoder:h1.port1
HEX1[3] << hex_decoder:h1.port1
HEX1[4] << hex_decoder:h1.port1
HEX1[5] << hex_decoder:h1.port1
HEX1[6] << hex_decoder:h1.port1
HEX0[0] << hex_decoder:h0.port1
HEX0[1] << hex_decoder:h0.port1
HEX0[2] << hex_decoder:h0.port1
HEX0[3] << hex_decoder:h0.port1
HEX0[4] << hex_decoder:h0.port1
HEX0[5] << hex_decoder:h0.port1
HEX0[6] << hex_decoder:h0.port1
PS2_CLK <> keyboard_decoder:kb.port0
PS2_DAT <> keyboard_decoder:kb.port1
VGA_CLK << <GND>
VGA_HS << <GND>
VGA_VS << <GND>
VGA_BLANK_N << <GND>
VGA_SYNC_N << <GND>
VGA_R[0] << <GND>
VGA_R[1] << <GND>
VGA_R[2] << <GND>
VGA_R[3] << <GND>
VGA_R[4] << <GND>
VGA_R[5] << <GND>
VGA_R[6] << <GND>
VGA_R[7] << <GND>
VGA_G[0] << <GND>
VGA_G[1] << <GND>
VGA_G[2] << <GND>
VGA_G[3] << <GND>
VGA_G[4] << <GND>
VGA_G[5] << <GND>
VGA_G[6] << <GND>
VGA_G[7] << <GND>
VGA_B[0] << <GND>
VGA_B[1] << <GND>
VGA_B[2] << <GND>
VGA_B[3] << <GND>
VGA_B[4] << <GND>
VGA_B[5] << <GND>
VGA_B[6] << <GND>
VGA_B[7] << <GND>
AUD_ADCDAT => ~NO_FANOUT~
AUD_BCLK <> <UNC>
AUD_ADCLRCK <> <UNC>
AUD_DACLRCK <> <UNC>
FPGA_I2C_SDAT <> <UNC>
FPGA_I2C_SCLK << <GND>
AUD_XCK << <GND>
AUD_DACDAT << <GND>


|whack_an_engineer|keyboard_decoder:kb
PS2_CLK <> PS2_Controller:comb_3.PS2_CLK
PS2_DAT <> PS2_Controller:comb_3.PS2_DAT
clock => clock.IN1
reset => reset.IN1
data_out[0] <= data_out[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[1] <= data_out[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[2] <= data_out[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[3] <= data_out[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
key_pressed <= key_pressed~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_temp[0] <= PS2_Controller:comb_3.received_data
data_temp[1] <= PS2_Controller:comb_3.received_data
data_temp[2] <= PS2_Controller:comb_3.received_data
data_temp[3] <= PS2_Controller:comb_3.received_data
data_temp[4] <= PS2_Controller:comb_3.received_data
data_temp[5] <= PS2_Controller:comb_3.received_data
data_temp[6] <= PS2_Controller:comb_3.received_data
data_temp[7] <= PS2_Controller:comb_3.received_data


|whack_an_engineer|keyboard_decoder:kb|PS2_Controller:comb_3
CLOCK_50 => CLOCK_50.IN2
reset => reset.IN2
the_command[0] => the_command_w[0].IN1
the_command[1] => the_command_w[1].IN1
the_command[2] => the_command_w[2].IN1
the_command[3] => the_command_w[3].IN1
the_command[4] => the_command_w[4].IN1
the_command[5] => the_command_w[5].IN1
the_command[6] => the_command_w[6].IN1
the_command[7] => the_command_w[7].IN1
send_command => send_command_w.IN1
PS2_CLK <> Altera_UP_PS2_Command_Out:PS2_Command_Out.PS2_CLK
PS2_DAT <> Altera_UP_PS2_Command_Out:PS2_Command_Out.PS2_DAT
command_was_sent <= Altera_UP_PS2_Command_Out:PS2_Command_Out.command_was_sent
error_communication_timed_out <= Altera_UP_PS2_Command_Out:PS2_Command_Out.error_communication_timed_out
received_data[0] <= Altera_UP_PS2_Data_In:PS2_Data_In.received_data
received_data[1] <= Altera_UP_PS2_Data_In:PS2_Data_In.received_data
received_data[2] <= Altera_UP_PS2_Data_In:PS2_Data_In.received_data
received_data[3] <= Altera_UP_PS2_Data_In:PS2_Data_In.received_data
received_data[4] <= Altera_UP_PS2_Data_In:PS2_Data_In.received_data
received_data[5] <= Altera_UP_PS2_Data_In:PS2_Data_In.received_data
received_data[6] <= Altera_UP_PS2_Data_In:PS2_Data_In.received_data
received_data[7] <= Altera_UP_PS2_Data_In:PS2_Data_In.received_data
received_data_en <= Altera_UP_PS2_Data_In:PS2_Data_In.received_data_en


|whack_an_engineer|keyboard_decoder:kb|PS2_Controller:comb_3|Altera_UP_PS2_Data_In:PS2_Data_In
clk => received_data_en~reg0.CLK
clk => received_data[0]~reg0.CLK
clk => received_data[1]~reg0.CLK
clk => received_data[2]~reg0.CLK
clk => received_data[3]~reg0.CLK
clk => received_data[4]~reg0.CLK
clk => received_data[5]~reg0.CLK
clk => received_data[6]~reg0.CLK
clk => received_data[7]~reg0.CLK
clk => data_shift_reg[0].CLK
clk => data_shift_reg[1].CLK
clk => data_shift_reg[2].CLK
clk => data_shift_reg[3].CLK
clk => data_shift_reg[4].CLK
clk => data_shift_reg[5].CLK
clk => data_shift_reg[6].CLK
clk => data_shift_reg[7].CLK
clk => data_count[0].CLK
clk => data_count[1].CLK
clk => data_count[2].CLK
clk => data_count[3].CLK
clk => s_ps2_receiver~1.DATAIN
reset => s_ps2_receiver.OUTPUTSELECT
reset => s_ps2_receiver.OUTPUTSELECT
reset => s_ps2_receiver.OUTPUTSELECT
reset => s_ps2_receiver.OUTPUTSELECT
reset => s_ps2_receiver.OUTPUTSELECT
reset => data_count.OUTPUTSELECT
reset => data_count.OUTPUTSELECT
reset => data_count.OUTPUTSELECT
reset => data_count.OUTPUTSELECT
reset => data_shift_reg.OUTPUTSELECT
reset => data_shift_reg.OUTPUTSELECT
reset => data_shift_reg.OUTPUTSELECT
reset => data_shift_reg.OUTPUTSELECT
reset => data_shift_reg.OUTPUTSELECT
reset => data_shift_reg.OUTPUTSELECT
reset => data_shift_reg.OUTPUTSELECT
reset => data_shift_reg.OUTPUTSELECT
reset => received_data.OUTPUTSELECT
reset => received_data.OUTPUTSELECT
reset => received_data.OUTPUTSELECT
reset => received_data.OUTPUTSELECT
reset => received_data.OUTPUTSELECT
reset => received_data.OUTPUTSELECT
reset => received_data.OUTPUTSELECT
reset => received_data.OUTPUTSELECT
reset => received_data_en.OUTPUTSELECT
wait_for_incoming_data => always1.IN1
wait_for_incoming_data => ns_ps2_receiver.DATAA
wait_for_incoming_data => ns_ps2_receiver.DATAA
start_receiving_data => always1.IN1
ps2_clk_posedge => always1.IN0
ps2_clk_posedge => always1.IN1
ps2_clk_posedge => always2.IN0
ps2_clk_posedge => always5.IN0
ps2_clk_posedge => Selector4.IN3
ps2_clk_posedge => Selector0.IN4
ps2_clk_posedge => Selector4.IN1
ps2_clk_posedge => Selector3.IN2
ps2_clk_negedge => ~NO_FANOUT~
ps2_data => data_shift_reg.DATAB
ps2_data => always1.IN1
received_data[0] <= received_data[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
received_data[1] <= received_data[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
received_data[2] <= received_data[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
received_data[3] <= received_data[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
received_data[4] <= received_data[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
received_data[5] <= received_data[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
received_data[6] <= received_data[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
received_data[7] <= received_data[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
received_data_en <= received_data_en~reg0.DB_MAX_OUTPUT_PORT_TYPE


|whack_an_engineer|keyboard_decoder:kb|PS2_Controller:comb_3|Altera_UP_PS2_Command_Out:PS2_Command_Out
clk => error_communication_timed_out~reg0.CLK
clk => command_was_sent~reg0.CLK
clk => cur_bit[0].CLK
clk => cur_bit[1].CLK
clk => cur_bit[2].CLK
clk => cur_bit[3].CLK
clk => transfer_counter[1].CLK
clk => transfer_counter[2].CLK
clk => transfer_counter[3].CLK
clk => transfer_counter[4].CLK
clk => transfer_counter[5].CLK
clk => transfer_counter[6].CLK
clk => transfer_counter[7].CLK
clk => transfer_counter[8].CLK
clk => transfer_counter[9].CLK
clk => transfer_counter[10].CLK
clk => transfer_counter[11].CLK
clk => transfer_counter[12].CLK
clk => transfer_counter[13].CLK
clk => transfer_counter[14].CLK
clk => transfer_counter[15].CLK
clk => transfer_counter[16].CLK
clk => transfer_counter[17].CLK
clk => waiting_counter[1].CLK
clk => waiting_counter[2].CLK
clk => waiting_counter[3].CLK
clk => waiting_counter[4].CLK
clk => waiting_counter[5].CLK
clk => waiting_counter[6].CLK
clk => waiting_counter[7].CLK
clk => waiting_counter[8].CLK
clk => waiting_counter[9].CLK
clk => waiting_counter[10].CLK
clk => waiting_counter[11].CLK
clk => waiting_counter[12].CLK
clk => waiting_counter[13].CLK
clk => waiting_counter[14].CLK
clk => waiting_counter[15].CLK
clk => waiting_counter[16].CLK
clk => waiting_counter[17].CLK
clk => waiting_counter[18].CLK
clk => waiting_counter[19].CLK
clk => waiting_counter[20].CLK
clk => command_initiate_counter[1].CLK
clk => command_initiate_counter[2].CLK
clk => command_initiate_counter[3].CLK
clk => command_initiate_counter[4].CLK
clk => command_initiate_counter[5].CLK
clk => command_initiate_counter[6].CLK
clk => command_initiate_counter[7].CLK
clk => command_initiate_counter[8].CLK
clk => command_initiate_counter[9].CLK
clk => command_initiate_counter[10].CLK
clk => command_initiate_counter[11].CLK
clk => command_initiate_counter[12].CLK
clk => command_initiate_counter[13].CLK
clk => ps2_command[0].CLK
clk => ps2_command[1].CLK
clk => ps2_command[2].CLK
clk => ps2_command[3].CLK
clk => ps2_command[4].CLK
clk => ps2_command[5].CLK
clk => ps2_command[6].CLK
clk => ps2_command[7].CLK
clk => ps2_command[8].CLK
clk => s_ps2_transmitter~1.DATAIN
reset => s_ps2_transmitter.OUTPUTSELECT
reset => s_ps2_transmitter.OUTPUTSELECT
reset => s_ps2_transmitter.OUTPUTSELECT
reset => s_ps2_transmitter.OUTPUTSELECT
reset => s_ps2_transmitter.OUTPUTSELECT
reset => s_ps2_transmitter.OUTPUTSELECT
reset => s_ps2_transmitter.OUTPUTSELECT
reset => s_ps2_transmitter.OUTPUTSELECT
reset => ps2_command.OUTPUTSELECT
reset => ps2_command.OUTPUTSELECT
reset => ps2_command.OUTPUTSELECT
reset => ps2_command.OUTPUTSELECT
reset => ps2_command.OUTPUTSELECT
reset => ps2_command.OUTPUTSELECT
reset => ps2_command.OUTPUTSELECT
reset => ps2_command.OUTPUTSELECT
reset => ps2_command.OUTPUTSELECT
reset => command_initiate_counter.OUTPUTSELECT
reset => command_initiate_counter.OUTPUTSELECT
reset => command_initiate_counter.OUTPUTSELECT
reset => command_initiate_counter.OUTPUTSELECT
reset => command_initiate_counter.OUTPUTSELECT
reset => command_initiate_counter.OUTPUTSELECT
reset => command_initiate_counter.OUTPUTSELECT
reset => command_initiate_counter.OUTPUTSELECT
reset => command_initiate_counter.OUTPUTSELECT
reset => command_initiate_counter.OUTPUTSELECT
reset => command_initiate_counter.OUTPUTSELECT
reset => command_initiate_counter.OUTPUTSELECT
reset => command_initiate_counter.OUTPUTSELECT
reset => waiting_counter.OUTPUTSELECT
reset => waiting_counter.OUTPUTSELECT
reset => waiting_counter.OUTPUTSELECT
reset => waiting_counter.OUTPUTSELECT
reset => waiting_counter.OUTPUTSELECT
reset => waiting_counter.OUTPUTSELECT
reset => waiting_counter.OUTPUTSELECT
reset => waiting_counter.OUTPUTSELECT
reset => waiting_counter.OUTPUTSELECT
reset => waiting_counter.OUTPUTSELECT
reset => waiting_counter.OUTPUTSELECT
reset => waiting_counter.OUTPUTSELECT
reset => waiting_counter.OUTPUTSELECT
reset => waiting_counter.OUTPUTSELECT
reset => waiting_counter.OUTPUTSELECT
reset => waiting_counter.OUTPUTSELECT
reset => waiting_counter.OUTPUTSELECT
reset => waiting_counter.OUTPUTSELECT
reset => waiting_counter.OUTPUTSELECT
reset => waiting_counter.OUTPUTSELECT
reset => transfer_counter.OUTPUTSELECT
reset => transfer_counter.OUTPUTSELECT
reset => transfer_counter.OUTPUTSELECT
reset => transfer_counter.OUTPUTSELECT
reset => transfer_counter.OUTPUTSELECT
reset => transfer_counter.OUTPUTSELECT
reset => transfer_counter.OUTPUTSELECT
reset => transfer_counter.OUTPUTSELECT
reset => transfer_counter.OUTPUTSELECT
reset => transfer_counter.OUTPUTSELECT
reset => transfer_counter.OUTPUTSELECT
reset => transfer_counter.OUTPUTSELECT
reset => transfer_counter.OUTPUTSELECT
reset => transfer_counter.OUTPUTSELECT
reset => transfer_counter.OUTPUTSELECT
reset => transfer_counter.OUTPUTSELECT
reset => transfer_counter.OUTPUTSELECT
reset => cur_bit.OUTPUTSELECT
reset => cur_bit.OUTPUTSELECT
reset => cur_bit.OUTPUTSELECT
reset => cur_bit.OUTPUTSELECT
reset => command_was_sent.OUTPUTSELECT
reset => error_communication_timed_out.OUTPUTSELECT
the_command[0] => WideXor0.IN0
the_command[0] => ps2_command.DATAB
the_command[1] => WideXor0.IN1
the_command[1] => ps2_command.DATAB
the_command[2] => WideXor0.IN2
the_command[2] => ps2_command.DATAB
the_command[3] => WideXor0.IN3
the_command[3] => ps2_command.DATAB
the_command[4] => WideXor0.IN4
the_command[4] => ps2_command.DATAB
the_command[5] => WideXor0.IN5
the_command[5] => ps2_command.DATAB
the_command[6] => WideXor0.IN6
the_command[6] => ps2_command.DATAB
the_command[7] => WideXor0.IN7
the_command[7] => ps2_command.DATAB
send_command => Selector1.IN3
send_command => Selector6.IN2
send_command => Selector7.IN6
send_command => command_was_sent.OUTPUTSELECT
send_command => error_communication_timed_out.OUTPUTSELECT
send_command => Selector0.IN1
ps2_clk_posedge => ns_ps2_transmitter.OUTPUTSELECT
ps2_clk_posedge => ns_ps2_transmitter.OUTPUTSELECT
ps2_clk_posedge => Selector6.IN3
ps2_clk_negedge => ns_ps2_transmitter.OUTPUTSELECT
ps2_clk_negedge => ns_ps2_transmitter.OUTPUTSELECT
ps2_clk_negedge => always1.IN1
ps2_clk_negedge => ns_ps2_transmitter.OUTPUTSELECT
ps2_clk_negedge => ns_ps2_transmitter.OUTPUTSELECT
ps2_clk_negedge => always6.IN0
ps2_clk_negedge => Selector3.IN3
ps2_clk_negedge => Selector5.IN3
PS2_CLK <> PS2_CLK
PS2_DAT <> PS2_DAT
command_was_sent <= command_was_sent~reg0.DB_MAX_OUTPUT_PORT_TYPE
error_communication_timed_out <= error_communication_timed_out~reg0.DB_MAX_OUTPUT_PORT_TYPE


|whack_an_engineer|mainDataPath:dp
clock => clock.IN5
reset => enableCountdown.ACLR
reset => scoreReset.PRESET
reset => current_state[0]~reg0.ACLR
reset => current_state[1]~reg0.ACLR
reset => current_state[2]~reg0.ACLR
reset => Mux0.IN6
startGame => Mux1.IN7
startGame => Mux2.IN6
userGameInput[0] => userGameInput[0].IN1
userGameInput[1] => userGameInput[1].IN1
userGameInput[2] => userGameInput[2].IN1
molesGenerated[0] <= molesGenerated[0].DB_MAX_OUTPUT_PORT_TYPE
molesGenerated[1] <= molesGenerated[1].DB_MAX_OUTPUT_PORT_TYPE
molesGenerated[2] <= molesGenerated[2].DB_MAX_OUTPUT_PORT_TYPE
molesGenerated[3] <= molesGenerated[3].DB_MAX_OUTPUT_PORT_TYPE
molesGenerated[4] <= molesGenerated[4].DB_MAX_OUTPUT_PORT_TYPE
current_state[0] <= current_state[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
current_state[1] <= current_state[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
current_state[2] <= current_state[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
currentCountDown[0] <= countdownTimer:u2.currentCountDown
currentCountDown[1] <= countdownTimer:u2.currentCountDown
currentCountDown[2] <= countdownTimer:u2.currentCountDown
currentCountDown[3] <= countdownTimer:u2.currentCountDown
currentCountDown[4] <= countdownTimer:u2.currentCountDown
currentCountDown[5] <= countdownTimer:u2.currentCountDown
score[0] <= scoreKeeper:u3.score
score[1] <= scoreKeeper:u3.score
score[2] <= scoreKeeper:u3.score
score[3] <= scoreKeeper:u3.score
score[4] <= scoreKeeper:u3.score
score[5] <= scoreKeeper:u3.score
score[6] <= scoreKeeper:u3.score
score[7] <= scoreKeeper:u3.score
moleHit[0] <= moleHit[0].DB_MAX_OUTPUT_PORT_TYPE
moleHit[1] <= moleHit[1].DB_MAX_OUTPUT_PORT_TYPE
moleHit[2] <= moleHit[2].DB_MAX_OUTPUT_PORT_TYPE


|whack_an_engineer|mainDataPath:dp|RateDivider:rateDU1
ClockIn => internalCount[0].CLK
ClockIn => internalCount[1].CLK
ClockIn => internalCount[2].CLK
ClockIn => internalCount[3].CLK
ClockIn => internalCount[4].CLK
ClockIn => internalCount[5].CLK
ClockIn => internalCount[6].CLK
ClockIn => internalCount[7].CLK
ClockIn => internalCount[8].CLK
ClockIn => internalCount[9].CLK
ClockIn => internalCount[10].CLK
ClockIn => internalCount[11].CLK
ClockIn => internalCount[12].CLK
ClockIn => internalCount[13].CLK
ClockIn => internalCount[14].CLK
ClockIn => internalCount[15].CLK
ClockIn => internalCount[16].CLK
ClockIn => internalCount[17].CLK
ClockIn => internalCount[18].CLK
ClockIn => internalCount[19].CLK
ClockIn => internalCount[20].CLK
ClockIn => internalCount[21].CLK
ClockIn => internalCount[22].CLK
ClockIn => internalCount[23].CLK
ClockIn => internalCount[24].CLK
ClockIn => internalCount[25].CLK
ClockIn => internalCount[26].CLK
ClockIn => internalCount[27].CLK
Reset => always0.IN1
enable <= Equal1.DB_MAX_OUTPUT_PORT_TYPE


|whack_an_engineer|mainDataPath:dp|generateMoles:u1
clock => clock.IN1
reset => reset.IN1
enable => enable.IN1
molesGenerated[0] <= pseudo_rng:gen.output_data
molesGenerated[1] <= pseudo_rng:gen.output_data
molesGenerated[2] <= pseudo_rng:gen.output_data
molesGenerated[3] <= pseudo_rng:gen.output_data
molesGenerated[4] <= pseudo_rng:gen.output_data


|whack_an_engineer|mainDataPath:dp|generateMoles:u1|pseudo_rng:gen
clock => temp_data[0].CLK
clock => temp_data[1].CLK
clock => temp_data[2].CLK
clock => output_data[0]~reg0.CLK
clock => output_data[1]~reg0.CLK
clock => output_data[2]~reg0.CLK
clock => output_data[3]~reg0.CLK
clock => output_data[4]~reg0.CLK
clock => counter[0].CLK
clock => counter[1].CLK
clock => counter[2].CLK
clock => counter[3].CLK
clock => counter[4].CLK
clock => counter[5].CLK
clock => counter[6].CLK
clock => counter[7].CLK
clock => counter[8].CLK
clock => counter[9].CLK
clock => counter[10].CLK
clock => counter[11].CLK
clock => counter[12].CLK
clock => counter[13].CLK
clock => counter[14].CLK
clock => counter[15].CLK
clock => counter[16].CLK
clock => counter[17].CLK
clock => counter[18].CLK
clock => counter[19].CLK
clock => counter[20].CLK
clock => counter[21].CLK
clock => counter[22].CLK
clock => counter[23].CLK
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => output_data.OUTPUTSELECT
reset => output_data.OUTPUTSELECT
reset => output_data.OUTPUTSELECT
reset => output_data.OUTPUTSELECT
reset => output_data.OUTPUTSELECT
reset => temp_data[0].ENA
reset => temp_data[1].ENA
reset => temp_data[2].ENA
generateEn => temp_data.OUTPUTSELECT
generateEn => temp_data.OUTPUTSELECT
generateEn => temp_data.OUTPUTSELECT
generateEn => output_data.OUTPUTSELECT
generateEn => output_data.OUTPUTSELECT
generateEn => output_data.OUTPUTSELECT
generateEn => output_data.OUTPUTSELECT
generateEn => output_data.OUTPUTSELECT
output_data[0] <= output_data[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output_data[1] <= output_data[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output_data[2] <= output_data[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output_data[3] <= output_data[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output_data[4] <= output_data[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|whack_an_engineer|mainDataPath:dp|matchLogic:u0
clock => moleHit[0]~reg0.CLK
clock => moleHit[1]~reg0.CLK
clock => moleHit[2]~reg0.CLK
clock => moleMiss~reg0.CLK
molesGenerated[0] => always1.IN1
molesGenerated[1] => always1.IN1
molesGenerated[2] => always1.IN1
molesGenerated[3] => always1.IN1
molesGenerated[4] => always1.IN1
hit[0] => Decoder0.IN2
hit[0] => moleHit.DATAA
hit[1] => Decoder0.IN1
hit[1] => moleHit.DATAA
hit[2] => Decoder0.IN0
hit[2] => moleHit.DATAA
moleHit[0] <= moleHit[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
moleHit[1] <= moleHit[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
moleHit[2] <= moleHit[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
moleMiss <= moleMiss~reg0.DB_MAX_OUTPUT_PORT_TYPE


|whack_an_engineer|mainDataPath:dp|countdownTimer:u2
clock => clock.IN2
enableCountdown => comb.IN1
scoreReset => scoreReset.IN2
gameEnd <= counter:cnt0.gameEnd
currentCountDown[0] <= counter:cnt0.currentCountDown
currentCountDown[1] <= counter:cnt0.currentCountDown
currentCountDown[2] <= counter:cnt0.currentCountDown
currentCountDown[3] <= counter:cnt0.currentCountDown
currentCountDown[4] <= counter:cnt0.currentCountDown
currentCountDown[5] <= counter:cnt0.currentCountDown


|whack_an_engineer|mainDataPath:dp|countdownTimer:u2|RateDivider:div0
ClockIn => internalCount[0].CLK
ClockIn => internalCount[1].CLK
ClockIn => internalCount[2].CLK
ClockIn => internalCount[3].CLK
ClockIn => internalCount[4].CLK
ClockIn => internalCount[5].CLK
ClockIn => internalCount[6].CLK
ClockIn => internalCount[7].CLK
ClockIn => internalCount[8].CLK
ClockIn => internalCount[9].CLK
ClockIn => internalCount[10].CLK
ClockIn => internalCount[11].CLK
ClockIn => internalCount[12].CLK
ClockIn => internalCount[13].CLK
ClockIn => internalCount[14].CLK
ClockIn => internalCount[15].CLK
ClockIn => internalCount[16].CLK
ClockIn => internalCount[17].CLK
ClockIn => internalCount[18].CLK
ClockIn => internalCount[19].CLK
ClockIn => internalCount[20].CLK
ClockIn => internalCount[21].CLK
ClockIn => internalCount[22].CLK
ClockIn => internalCount[23].CLK
ClockIn => internalCount[24].CLK
ClockIn => internalCount[25].CLK
ClockIn => internalCount[26].CLK
ClockIn => internalCount[27].CLK
Reset => always0.IN1
enable <= Equal1.DB_MAX_OUTPUT_PORT_TYPE


|whack_an_engineer|mainDataPath:dp|countdownTimer:u2|counter:cnt0
clock => gameEnd~reg0.CLK
clock => currentCountDown[0]~reg0.CLK
clock => currentCountDown[1]~reg0.CLK
clock => currentCountDown[2]~reg0.CLK
clock => currentCountDown[3]~reg0.CLK
clock => currentCountDown[4]~reg0.CLK
clock => currentCountDown[5]~reg0.CLK
enableCountdown => always0.IN1
reset => gameEnd~reg0.ACLR
reset => currentCountDown[0]~reg0.ACLR
reset => currentCountDown[1]~reg0.PRESET
reset => currentCountDown[2]~reg0.PRESET
reset => currentCountDown[3]~reg0.PRESET
reset => currentCountDown[4]~reg0.PRESET
reset => currentCountDown[5]~reg0.ACLR
gameEnd <= gameEnd~reg0.DB_MAX_OUTPUT_PORT_TYPE
currentCountDown[0] <= currentCountDown[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
currentCountDown[1] <= currentCountDown[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
currentCountDown[2] <= currentCountDown[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
currentCountDown[3] <= currentCountDown[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
currentCountDown[4] <= currentCountDown[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
currentCountDown[5] <= currentCountDown[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|whack_an_engineer|mainDataPath:dp|scoreKeeper:u3
clock => clock.IN1
scoreReset => scoreReset.IN1
moleHit[0] => LessThan0.IN6
moleHit[1] => LessThan0.IN5
moleHit[2] => LessThan0.IN4
score[0] <= score[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
score[1] <= score[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
score[2] <= score[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
score[3] <= score[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
score[4] <= score[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
score[5] <= score[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
score[6] <= score[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
score[7] <= score[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|whack_an_engineer|mainDataPath:dp|scoreKeeper:u3|RateDivider:div0
ClockIn => internalCount[0].CLK
ClockIn => internalCount[1].CLK
ClockIn => internalCount[2].CLK
ClockIn => internalCount[3].CLK
ClockIn => internalCount[4].CLK
ClockIn => internalCount[5].CLK
ClockIn => internalCount[6].CLK
ClockIn => internalCount[7].CLK
ClockIn => internalCount[8].CLK
ClockIn => internalCount[9].CLK
ClockIn => internalCount[10].CLK
ClockIn => internalCount[11].CLK
ClockIn => internalCount[12].CLK
ClockIn => internalCount[13].CLK
ClockIn => internalCount[14].CLK
ClockIn => internalCount[15].CLK
ClockIn => internalCount[16].CLK
ClockIn => internalCount[17].CLK
ClockIn => internalCount[18].CLK
ClockIn => internalCount[19].CLK
ClockIn => internalCount[20].CLK
ClockIn => internalCount[21].CLK
ClockIn => internalCount[22].CLK
ClockIn => internalCount[23].CLK
ClockIn => internalCount[24].CLK
ClockIn => internalCount[25].CLK
ClockIn => internalCount[26].CLK
ClockIn => internalCount[27].CLK
Reset => always0.IN1
enable <= Equal1.DB_MAX_OUTPUT_PORT_TYPE


|whack_an_engineer|hex_decoder:h0
c[0] => display.IN1
c[0] => display.IN1
c[0] => display.IN1
c[0] => display.IN1
c[0] => display.IN1
c[0] => display.IN1
c[0] => display.IN1
c[0] => display.IN1
c[0] => display.IN1
c[0] => display.IN1
c[0] => display.IN1
c[0] => display.IN1
c[0] => display.IN1
c[0] => display.IN1
c[1] => display.IN1
c[1] => display.IN1
c[1] => display.IN1
c[1] => display.IN1
c[1] => display.IN1
c[1] => display.IN1
c[1] => display.IN1
c[2] => display.IN0
c[2] => display.IN0
c[2] => display.IN0
c[2] => display.IN0
c[3] => display.IN1
c[3] => display.IN1
c[3] => display.IN1
c[3] => display.IN1
display[0] <= display.DB_MAX_OUTPUT_PORT_TYPE
display[1] <= display.DB_MAX_OUTPUT_PORT_TYPE
display[2] <= display.DB_MAX_OUTPUT_PORT_TYPE
display[3] <= display.DB_MAX_OUTPUT_PORT_TYPE
display[4] <= display.DB_MAX_OUTPUT_PORT_TYPE
display[5] <= display.DB_MAX_OUTPUT_PORT_TYPE
display[6] <= display.DB_MAX_OUTPUT_PORT_TYPE
display[7] <= <GND>


|whack_an_engineer|hex_decoder:h1
c[0] => display.IN1
c[0] => display.IN1
c[0] => display.IN1
c[0] => display.IN1
c[0] => display.IN1
c[0] => display.IN1
c[0] => display.IN1
c[0] => display.IN1
c[0] => display.IN1
c[0] => display.IN1
c[0] => display.IN1
c[0] => display.IN1
c[0] => display.IN1
c[0] => display.IN1
c[1] => display.IN1
c[1] => display.IN1
c[1] => display.IN1
c[1] => display.IN1
c[1] => display.IN1
c[1] => display.IN1
c[1] => display.IN1
c[2] => display.IN0
c[2] => display.IN0
c[2] => display.IN0
c[2] => display.IN0
c[3] => display.IN1
c[3] => display.IN1
c[3] => display.IN1
c[3] => display.IN1
display[0] <= display.DB_MAX_OUTPUT_PORT_TYPE
display[1] <= display.DB_MAX_OUTPUT_PORT_TYPE
display[2] <= display.DB_MAX_OUTPUT_PORT_TYPE
display[3] <= display.DB_MAX_OUTPUT_PORT_TYPE
display[4] <= display.DB_MAX_OUTPUT_PORT_TYPE
display[5] <= display.DB_MAX_OUTPUT_PORT_TYPE
display[6] <= display.DB_MAX_OUTPUT_PORT_TYPE
display[7] <= <GND>


|whack_an_engineer|hex_decoder:h2
c[0] => display.IN1
c[0] => display.IN1
c[0] => display.IN1
c[0] => display.IN1
c[0] => display.IN1
c[0] => display.IN1
c[0] => display.IN1
c[0] => display.IN1
c[0] => display.IN1
c[0] => display.IN1
c[0] => display.IN1
c[0] => display.IN1
c[0] => display.IN1
c[0] => display.IN1
c[1] => display.IN1
c[1] => display.IN1
c[1] => display.IN1
c[1] => display.IN1
c[1] => display.IN1
c[1] => display.IN1
c[1] => display.IN1
c[2] => display.IN0
c[2] => display.IN0
c[2] => display.IN0
c[2] => display.IN0
c[3] => display.IN1
c[3] => display.IN1
c[3] => display.IN1
c[3] => display.IN1
display[0] <= display.DB_MAX_OUTPUT_PORT_TYPE
display[1] <= display.DB_MAX_OUTPUT_PORT_TYPE
display[2] <= display.DB_MAX_OUTPUT_PORT_TYPE
display[3] <= display.DB_MAX_OUTPUT_PORT_TYPE
display[4] <= display.DB_MAX_OUTPUT_PORT_TYPE
display[5] <= display.DB_MAX_OUTPUT_PORT_TYPE
display[6] <= display.DB_MAX_OUTPUT_PORT_TYPE
display[7] <= <GND>


|whack_an_engineer|hex_decoder:h3
c[0] => display.IN1
c[0] => display.IN1
c[0] => display.IN1
c[0] => display.IN1
c[0] => display.IN1
c[0] => display.IN1
c[0] => display.IN1
c[0] => display.IN1
c[0] => display.IN1
c[0] => display.IN1
c[0] => display.IN1
c[0] => display.IN1
c[0] => display.IN1
c[0] => display.IN1
c[1] => display.IN1
c[1] => display.IN1
c[1] => display.IN1
c[1] => display.IN1
c[1] => display.IN1
c[1] => display.IN1
c[1] => display.IN1
c[2] => display.IN0
c[2] => display.IN0
c[2] => display.IN0
c[2] => display.IN0
c[3] => display.IN1
c[3] => display.IN1
c[3] => display.IN1
c[3] => display.IN1
display[0] <= display.DB_MAX_OUTPUT_PORT_TYPE
display[1] <= display.DB_MAX_OUTPUT_PORT_TYPE
display[2] <= display.DB_MAX_OUTPUT_PORT_TYPE
display[3] <= display.DB_MAX_OUTPUT_PORT_TYPE
display[4] <= display.DB_MAX_OUTPUT_PORT_TYPE
display[5] <= display.DB_MAX_OUTPUT_PORT_TYPE
display[6] <= display.DB_MAX_OUTPUT_PORT_TYPE
display[7] <= <GND>


|whack_an_engineer|hex_decoder:h5
c[0] => display.IN1
c[0] => display.IN1
c[0] => display.IN1
c[0] => display.IN1
c[0] => display.IN1
c[0] => display.IN1
c[0] => display.IN1
c[0] => display.IN1
c[0] => display.IN1
c[0] => display.IN1
c[0] => display.IN1
c[0] => display.IN1
c[0] => display.IN1
c[0] => display.IN1
c[1] => display.IN1
c[1] => display.IN1
c[1] => display.IN1
c[1] => display.IN1
c[1] => display.IN1
c[1] => display.IN1
c[1] => display.IN1
c[2] => display.IN0
c[2] => display.IN0
c[2] => display.IN0
c[2] => display.IN0
c[3] => display.IN1
c[3] => display.IN1
c[3] => display.IN1
c[3] => display.IN1
display[0] <= display.DB_MAX_OUTPUT_PORT_TYPE
display[1] <= display.DB_MAX_OUTPUT_PORT_TYPE
display[2] <= display.DB_MAX_OUTPUT_PORT_TYPE
display[3] <= display.DB_MAX_OUTPUT_PORT_TYPE
display[4] <= display.DB_MAX_OUTPUT_PORT_TYPE
display[5] <= display.DB_MAX_OUTPUT_PORT_TYPE
display[6] <= display.DB_MAX_OUTPUT_PORT_TYPE
display[7] <= <GND>


